---
language: python

python:
  - 2.7

services:
  - docker

sudo: required

env:
  matrix:
    - os=centos version=6 container_id=$(mktemp) ANSIBLE_VERSION=latest
    - os=centos version=6 container_id=$(mktemp) ANSIBLE_VERSION=2.6.3
    - os=centos version=6 container_id=$(mktemp) ANSIBLE_VERSION=2.5.8
    - os=centos version=6 container_id=$(mktemp) ANSIBLE_VERSION=2.4.3
    - os=centos version=7 container_id=$(mktemp) ANSIBLE_VERSION=latest
    - os=centos version=7 container_id=$(mktemp) ANSIBLE_VERSION=2.6.3
    - os=centos version=7 container_id=$(mktemp) ANSIBLE_VERSION=2.5.8
    - os=centos version=7 container_id=$(mktemp) ANSIBLE_VERSION=2.4.3

install:
  - if [ "${ANSIBLE_VERSION}" = "latest" ]; then sudo pip install ansible; else sudo pip install ansible==${ANSIBLE_VERSION}; fi
  - docker pull ${os}:${version}
  - docker build --file tests/Docker/Dockerfile.${os}${version} --tag=${os}${version} tests/Docker

script:
  - docker run --privileged -d --name target.host ${os}${version} /sbin/init > "${container_id}"

  - ansible-playbook -i tests/inventory tests/test.yml --syntax-check
  - ansible-playbook -i tests/inventory tests/test.yml
  - ansible-playbook -i tests/inventory tests/test.yml | grep -q 'changed=0.*failed=0' && (echo "" && exit 0) || (echo 'Changed or failed after retry' && exit 1)

  - if [ ${version} -ge 7 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/yum/yum-cron.conf | grep "update_cmd = security"; if [ $? -ne 0 ]; then exit 1; fi fi
  - if [ ${version} -ge 7 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/yum/yum-cron.conf | grep "apply_updates = yes"; if [ $? -ne 0 ]; then exit 1; fi fi
  - if [ ${version} -ge 7 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/yum/yum-cron.conf | grep "email_to = root"; if [ $? -ne 0 ]; then exit 1; fi fi
  - if [ ${version} -ge 7 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/yum/yum-cron.conf | grep "assumeyes"; if [ $? -eq 0 ]; then exit 1; fi fi
  - if [ ${version} -ge 7 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/yum/yum-cron-hourly.conf | grep "update_cmd = minimal"; if [ $? -ne 0 ]; then exit 1; fi fi
  - if [ ${version} -ge 7 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/yum/yum-cron-hourly.conf | grep "download_updates = yes"; if [ $? -ne 0 ]; then exit 1; fi fi
  - if [ ${version} -ge 7 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/yum/yum-cron-hourly.conf | grep "apply_updates = no"; if [ $? -ne 0 ]; then exit 1; fi fi
  - if [ ${version} -ge 7 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/yum/yum-cron-hourly.conf | grep "assumeyes"; if [ $? -eq 0 ]; then exit 1; fi fi
  - if [ ${version} -eq 6 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/sysconfig/yum-cron | grep "CHECK_FIRST=yes"; if [ $? -ne 0 ]; then exit 1; fi fi
  - if [ ${version} -eq 6 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/sysconfig/yum-cron | grep "ERROR_LEVEL=1"; if [ $? -ne 0 ]; then exit 1; fi fi
  - if [ ${version} -eq 6 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/sysconfig/yum-cron | grep 'RANDOMWAIT="60"'; if [ $? -ne 0 ]; then exit 1; fi fi
  - if [ ${version} -eq 6 ]; then sudo docker exec -t "$(cat ${container_id})" cat /etc/sysconfig/yum-cron | grep "SERVICE_WAITS=yes"; if [ $? -ne 0 ]; then exit 1; fi fi

after_script:
  - sudo docker stop "$(cat ${container_id})"

  - sudo docker rm "$(cat ${container_id})"

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
